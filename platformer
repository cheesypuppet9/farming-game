<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Infinite Platformer Game</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css">
  <style>
    body, html {
      height: 100%;
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: #f4f4f4;
    }

    canvas {
      border: 1px solid #000;
      background-color: #e0e0e0;
    }
  </style>
</head>
<body>

<main class="container">
  <h1>Infinite Platformer</h1>
  <canvas id="gameCanvas" width="800" height="400"></canvas>
</main>

<script>
  // Initialize canvas and context
  const canvas = document.getElementById('gameCanvas');
  const ctx = canvas.getContext('2d');

  // Game settings
  const player = {
    x: 50,
    y: 350,
    width: 50,
    height: 50,
    color: 'blue',
    dx: 0,
    dy: 0,
    speed: 3
  };

  const keys = {
    a: false,
    w: false,
    d: false,
    s: false
  };

  // Function to draw player
  function drawPlayer() {
    ctx.fillStyle = player.color;
    ctx.fillRect(player.x, player.y, player.width, player.height);
  }

  // Function to clear canvas
  function clearCanvas() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
  }

  // Update game state
  function update() {
    clearCanvas();
    drawPlayer();
    movePlayer();
    requestAnimationFrame(update);
  }

  // Move the player based on key presses
  function movePlayer() {
    if (keys.a && player.x > 0) {
      player.dx = -player.speed; // Move left
    } else if (keys.d && player.x + player.width < canvas.width) {
      player.dx = player.speed; // Move right
    } else {
      player.dx = 0;
    }

    if (keys.w && player.y > 0) {
      player.dy = -player.speed; // Move up
    } else if (keys.s && player.y + player.height < canvas.height) {
      player.dy = player.speed; // Move down
    } else {
      player.dy = 0;
    }

    player.x += player.dx;
    player.y += player.dy;
  }

  // Keydown event handler
  document.addEventListener('keydown', (e) => {
    if (e.key === 'a' || e.key === 'A') {
      keys.a = true;
    }
    if (e.key === 'd' || e.key === 'D') {
      keys.d = true;
    }
    if (e.key === 'w' || e.key === 'W') {
      keys.w = true;
    }
    if (e.key === 's' || e.key === 'S') {
      keys.s = true;
    }
  });

  // Keyup event handler
  document.addEventListener('keyup', (e) => {
    if (e.key === 'a' || e.key === 'A') {
      keys.a = false;
    }
    if (e.key === 'd' || e.key === 'D') {
      keys.d = false;
    }
    if (e.key === 'w' || e.key === 'W') {
      keys.w = false;
    }
    if (e.key === 's' || e.key === 'S') {
      keys.s = false;
    }
  });

  // Start the game loop
  update();
</script>

</body>
</html>
